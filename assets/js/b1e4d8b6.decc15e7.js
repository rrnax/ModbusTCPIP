"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[613],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>b});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=r.createContext({}),c=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=c(e.components);return r.createElement(l.Provider,{value:t},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),p=c(n),m=o,b=p["".concat(l,".").concat(m)]||p[m]||d[m]||a;return n?r.createElement(b,i(i({ref:t},u),{},{components:n})):r.createElement(b,i({ref:t},u))}));function b(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=m;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[p]="string"==typeof e?e:o,i[1]=s;for(var c=2;c<a;c++)i[c]=n[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},6991:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>d,frontMatter:()=>a,metadata:()=>s,toc:()=>c});var r=n(7462),o=(n(7294),n(3905));const a={sidebar_position:3},i=void 0,s={unversionedId:"ModbusFrameObject",id:"ModbusFrameObject",title:"ModbusFrameObject",description:"Class Definition",source:"@site/docs/ModbusFrameObject.md",sourceDirName:".",slug:"/ModbusFrameObject",permalink:"/ModbusTCPIP/ModbusFrameObject",draft:!1,tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"ModbusConnection",permalink:"/ModbusTCPIP/ModbusConnection"},next:{title:"ModbusFrameCreator",permalink:"/ModbusTCPIP/ModbusFrameCreator"}},l={},c=[{value:"Class Definition",id:"class-definition",level:3},{value:"Constructors",id:"constructors",level:3},{value:"Properites",id:"properites",level:3},{value:"Methods",id:"methods",level:3}],u={toc:c},p="wrapper";function d(e){let{components:t,...n}=e;return(0,o.kt)(p,(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h3",{id:"class-definition"},"Class Definition"),(0,o.kt)("p",null,"ModbusFrameObject is class to storage and decode modbus frames."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-csharp"},"public class ModbusFrameObject;\n")),(0,o.kt)("h3",{id:"constructors"},"Constructors"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-csharp"},"public ModbusFrameObject(byte[] frame)\n")),(0,o.kt)("p",null,"Frame of bytes in Modbus protocole style, object in constructore decode the most important things about frame."),(0,o.kt)("h3",{id:"properites"},"Properites"),(0,o.kt)("p",null,"Cover all information about given frame."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-csharp"},"byte[] orginalFrame \nint transactionId\nint protocolId \nint amountBytesOfPDU\nint unitId\nint functionCode\nint dataBytesAmount \nstring dataType \nList<int> registers\nList<bool> oneStateValuesList\n")),(0,o.kt)("h3",{id:"methods"},"Methods"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-csharp"},"DecodeBits()\n")),(0,o.kt)("p",null,"Return type: ",(0,o.kt)("inlineCode",{parentName:"p"},"List<bool>")),(0,o.kt)("p",null,"Decode bits for reading coils and discrete inputs, On/Off values."),(0,o.kt)("hr",null),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-csharp"},"DecodeRegisters()\n")),(0,o.kt)("p",null,"Return type: ",(0,o.kt)("inlineCode",{parentName:"p"},"List<int>")),(0,o.kt)("p",null,"Decode registers holding or input."),(0,o.kt)("hr",null),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-csharp"},"CombineBytes(byte firstByte, byte secondByte)\n")),(0,o.kt)("p",null,"Return type: ",(0,o.kt)("inlineCode",{parentName:"p"},"int")),(0,o.kt)("p",null,"Decode order of bytes in response."))}d.isMDXComponent=!0}}]);